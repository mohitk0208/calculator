{"version":3,"sources":["context/ExpressionContext.js","functions/calculate.js","context/ResultContext.js","components/displayComponents/Expression.js","components/displayComponents/Result.js","components/Display.js","components/KeypadComponents/KeyBase.js","components/KeypadComponents/functionKeys/Add.js","components/KeypadComponents/functionKeys/Backspace.js","components/KeypadComponents/functionKeys/Clear.js","components/KeypadComponents/functionKeys/Divide.js","components/KeypadComponents/functionKeys/Equals.js","components/KeypadComponents/functionKeys/Multiply.js","components/KeypadComponents/functionKeys/Percent.js","components/KeypadComponents/functionKeys/Subtract.js","components/KeypadComponents/NumberKey.js","components/KeypadComponents/Keypad.js","components/Calculator.js","App.js","reportWebVitals.js","index.js"],"names":["ExpressionContext","createContext","ExpressionUpdateContext","useExpression","useContext","useExpressionUpdater","ExpressionProvider","children","useState","expression","setExpression","useEffect","obj","document","querySelector","scrollLeft","scrollWidth","Provider","value","isalphaNumeric","str","preced","calculate","exp","console","log","replace","compileInputExpression","infix","split","i","length","postfixArr","infixArr","operatorStack","forEach","infixEle","push","pop","infixToPostfix","String","operands","postfixEle","val1","Number","val2","evaluatePostfix","ResultContext","ResultUpdateContext","useResult","useResultUpdater","ResultProvider","result","setResult","output","isNaN","Expression","className","Result","Display","KeyBase","props","onClick","colored","clicked","setClicked","setTimeout","Add","len","addValidation","prev","Backspace","slice","Clear","Divide","setexpression","addDivideValidation","Equals","Multiply","addMultiplyValidation","Percent","addPercentValidation","Subtract","addSubtractValidation","NumberKey","setExp","dotValidationAndExpressionUpdate","Keypad","Calculator","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.72b92edb.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nconst ExpressionContext = createContext();\r\nconst ExpressionUpdateContext = createContext();\r\n\r\nexport const useExpression = () => useContext(ExpressionContext);\r\nexport const useExpressionUpdater = () => useContext(ExpressionUpdateContext);\r\n\r\nconst ExpressionProvider = ({ children }) => {\r\n\tconst [expression, setExpression] = useState(\"15*3\");\r\n\r\n\tuseEffect(() => {\r\n\t\tconst obj = document.querySelector(\".expression-container span\");\r\n\t\tobj.scrollLeft = obj.scrollWidth;\r\n\t} ,[expression])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ExpressionContext.Provider value={expression}>\r\n\t\t\t\t<ExpressionUpdateContext.Provider value={setExpression}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</ExpressionUpdateContext.Provider>\r\n\t\t\t</ExpressionContext.Provider>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ExpressionProvider;\r\n","const isalphaNumeric = (str) => {\r\n\tif (str === \"*\" || str === \"/\" || str === \"+\" || str === \"-\" || str === \"%\")\r\n\t\treturn false;\r\n\treturn true;\r\n};\r\n\r\nconst preced = (str) => {\r\n\tif (str === \"+\" || str === \"-\") return 1;\r\n\tif (str === \"*\" || str === \"/\") return 2;\r\n\tif (str === \"%\") return 3;\r\n\treturn 0;\r\n};\r\n\r\nconst compileInputExpression = (exp) => {\r\n\tlet expression;\r\n\texpression = exp;\r\n\r\n\t// ***************************************\r\n\t// convert 45. to 45.0\r\n\tconsole.log(expression);\r\n\texpression = expression.replace(/\\.(?=[*+-/])|\\.$/g, \".0\");\r\n\r\n\t// ***************************************\r\n\t//convert 45%55 to 45*0.01*55\r\n\t// expression = expression.replace(/%(?=[0-9])/g, \"*0.01*\");  no need to convert\r\n\t//convert 54% to 54*0.01\r\n\t//convert 4%/67+2% to 4*0.01/67+2*0.01\r\n\t// expression = expression.replace(/%(?=[*/\\-+% ])|%$/g, \"*0.01\"); no need to convert\r\n\r\n\treturn expression;\r\n};\r\n\r\nconst infixToPostfix = (infixArr) => {\r\n\tlet operatorStack = [];\r\n\tlet postfixArr = [];\r\n\r\n\tinfixArr.forEach((infixEle) => {\r\n\t\tif (isalphaNumeric(infixEle)) postfixArr.push(infixEle);\r\n\t\telse {\r\n\t\t\tif (preced(infixEle) > preced(operatorStack[operatorStack.length - 1])) {\r\n\t\t\t\toperatorStack.push(infixEle);\r\n\t\t\t} else {\r\n\t\t\t\twhile (\r\n\t\t\t\t\toperatorStack.length !== 0 &&\r\n\t\t\t\t\tpreced(infixEle) <= preced(operatorStack[operatorStack.length - 1])\r\n\t\t\t\t) {\r\n\t\t\t\t\tpostfixArr.push(operatorStack[operatorStack.length - 1]);\r\n\t\t\t\t\toperatorStack.pop();\r\n\t\t\t\t}\r\n\t\t\t\toperatorStack.push(infixEle);\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\twhile (operatorStack.length !== 0) {\r\n\t\tpostfixArr.push(operatorStack[operatorStack.length - 1]);\r\n\t\toperatorStack.pop();\r\n\t}\r\n\r\n\treturn postfixArr;\r\n};\r\n\r\nconst evaluatePostfix = (postfixArr) => {\r\n\tlet operands = [];\r\n\r\n\tpostfixArr.forEach((postfixEle) => {\r\n\t\tif (isalphaNumeric(postfixEle)) {\r\n\t\t\toperands.push(postfixEle);\r\n\t\t} else {\r\n\t\t\tif (postfixEle === \"%\") {\r\n\t\t\t\tlet val1 = Number(operands.pop());\r\n\r\n\t\t\t\toperands.push(val1 / 100);\r\n\t\t\t} else {\r\n\t\t\t\tlet val1 = Number(operands.pop());\r\n\t\t\t\tlet val2 = Number(operands.pop());\r\n\t\r\n\t\t\t\tswitch (postfixEle) {\r\n\t\t\t\t\tcase \"+\":\r\n\t\t\t\t\t\toperands.push(val2 + val1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"-\":\r\n\t\t\t\t\t\toperands.push(val2 - val1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"*\":\r\n\t\t\t\t\t\toperands.push(val2 * val1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"/\":\r\n\t\t\t\t\t\toperands.push(val2 / val1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t});\r\n\r\n\treturn operands.pop();\r\n};\r\n\r\nexport const calculate = (exp) => {\r\n\r\n\tif(exp === \"\") return \"\";\r\n\r\n\tlet expression = compileInputExpression(exp);\r\n\t\r\n\texpression = expression.replace(/^-/,\"s\");\r\n\texpression = expression.replace(/(?<=[*/])-/, \"s\");\r\n\r\n\tconsole.log(expression);\r\n\r\n\tconst infix = expression.split(/(?=[*/+%-])|(?<=[*/+%-])|(?=s)/);\r\n\r\n\tfor (let i = 0; i < infix.length; i++) {\r\n\t\tinfix[i] = infix[i].replace(\"s\", \"-\");\r\n\t}\r\n\tconsole.log(infix);\r\n\r\n\tconst postfixArr = infixToPostfix(infix);\r\n\r\n\treturn String(evaluatePostfix(postfixArr));\r\n};\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useExpression } from \"./ExpressionContext\";\r\nimport {calculate} from \"../functions/calculate\"\r\n\r\nconst ResultContext = createContext();\r\nconst ResultUpdateContext = createContext();\r\n\r\nexport const useResult = () => useContext(ResultContext);\r\nexport const useResultUpdater = () => useContext(ResultUpdateContext);\r\n\r\nconst ResultProvider = ({ children }) => {\r\n\tconst [result, setResult] = useState(\"65\");\r\n\tconst expression = useExpression();\r\n\r\n\tuseEffect(() =>{\r\n\t\tconst output = calculate(expression);\r\n\t\tconsole.log(output);\r\n\t\tif(isNaN(output)) setResult(\"\");\r\n\t\telse setResult(output)\r\n\t\t\r\n\t},[expression])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst obj = document.querySelector(\".result-container span\");\r\n\t\tobj.scrollLeft = obj.scrollWidth\r\n\t},[result])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ResultContext.Provider value={result}>\r\n\t\t\t\t<ResultUpdateContext.Provider value={setResult}>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</ResultUpdateContext.Provider>\r\n\t\t\t</ResultContext.Provider>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ResultProvider;\r\n","import React from \"react\";\r\nimport { useExpression } from \"../../context/ExpressionContext\";\r\n\r\nimport \"./Expression.css\";\r\nconst Expression = () => {\r\n\tconst expression = useExpression();\r\n\r\n\treturn (\r\n\t\t<div className=\"expression-container\">\r\n\t\t\t<span>{expression}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Expression;\r\n","import React from \"react\";\r\nimport { useResult } from \"../../context/ResultContext\";\r\n\r\nimport \"./Result.css\";\r\n\r\nexport const Result = () => {\r\n\tconst result = useResult();\r\n\r\n\treturn (\r\n\t\t<div className=\"result-container\">\r\n\t\t\t<span>{result}</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react'\r\n\r\nimport \"./Display.css\"\r\nimport Expression from './displayComponents/Expression'\r\nimport { Result } from './displayComponents/Result'\r\n\r\nfunction Display() {\r\n    return (\r\n        <div className=\"display-container\">\r\n            <Expression />\r\n            <Result />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./KeyBase.css\";\r\nconst KeyBase = (props) => {\r\n\tconst { value, onClick, colored } = props;\r\n\tconst [clicked, setClicked] = useState(false);\r\n\r\n\tconst handleClick = () => {\r\n\t\t// \tconst cover =document.querySelector(\".cover\")\r\n\t\t// \tcover.classList.add(\"click-cover\");\r\n\t\t// \tsetTimeout(()=>{\r\n\t\t// \t\tcover.classList.remove(\"click-cover\");\r\n\t\t// \t},150)\r\n\t\tsetClicked(true);\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetClicked(false);\r\n\t\t}, 150);\r\n\t\tonClick();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"keybase\" onClick={handleClick}>\r\n\t\t\t<div className={clicked ? \"click-cover\":\"\"}></div>\r\n\t\t\t<p className={colored ? \"blue color\" : \"default\"}>{value}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default KeyBase;\r\n","import React from \"react\";\r\nimport {\r\n\tuseExpression,\r\n\tuseExpressionUpdater,\r\n} from \"../../../context/ExpressionContext\";\r\nimport KeyBase from \"../KeyBase\";\r\n\r\nconst addValidation = (exp) => {\r\n\tconst len = exp.length;\r\n\r\n\tif (exp === \"\") return false;\r\n\tif (\r\n\t\texp[len - 1] === \"*\" ||\r\n\t\texp[len - 1] === \"/\" ||\r\n\t\texp[len - 1] === \"-\" ||\r\n\t\texp[len - 1] === \"+\"\r\n\t)\r\n\t\treturn false;\r\n\r\n\treturn true;\r\n};\r\nconst Add = () => {\r\n\tconst expression = useExpression();\r\n\tconst setExpression = useExpressionUpdater();\r\n\r\n\tconst addHandler = () => {\r\n\t\tif (addValidation(expression)) setExpression((prev) => prev + \"+\");\r\n\t};\r\n\r\n\treturn <KeyBase value=\"+\" colored onClick={addHandler} />;\r\n};\r\n\r\nexport default Add;\r\n","import React from \"react\";\r\nimport {\r\n\tuseExpression,\r\n\tuseExpressionUpdater,\r\n} from \"../../../context/ExpressionContext\";\r\nimport KeyBase from \"../KeyBase\";\r\n\r\nconst Backspace = () => {\r\n\tconst expression = useExpression();\r\n\tconst setExpression = useExpressionUpdater();\r\n\r\n\tconst backspaceHandler = () => {\r\n\t\tif (expression !== \"\") {\r\n\t\t\tsetExpression((prev) => prev.slice(0, prev.length-1));\r\n\t\t}\r\n\t};\r\n\r\n\treturn <KeyBase value=\"<=\" onClick={backspaceHandler} />;\r\n};\r\n\r\nexport default Backspace;\r\n","import React from \"react\";\r\nimport {\r\n\tuseExpression,\r\n\tuseExpressionUpdater,\r\n} from \"../../../context/ExpressionContext\";\r\nimport { useResult, useResultUpdater } from \"../../../context/ResultContext\";\r\nimport KeyBase from \"../KeyBase\";\r\n\r\nconst Clear = () => {\r\n\tconst expression = useExpression();\r\n\tconst result = useResult();\r\n\tconst setExpression = useExpressionUpdater();\r\n\tconst setResult = useResultUpdater();\r\n\r\n\tconst clearHandler = () => {\r\n        \r\n\t\tif (expression !== \"\") setExpression(\"\");\r\n\t\tif (result !== \"\") setResult(\"\");\r\n\t};\r\n\r\n\treturn <KeyBase value=\"C\" onClick={clearHandler} />;\r\n};\r\n\r\nexport default Clear;\r\n","import React from \"react\";\r\nimport {\r\n\tuseExpression,\r\n\tuseExpressionUpdater,\r\n} from \"../../../context/ExpressionContext\";\r\nimport KeyBase from \"../KeyBase\";\r\n\r\nconst addDivideValidation = (exp) => {\r\n\tconst len = exp.length;\r\n\r\n\tif (exp === \"\") return false;\r\n\r\n\tif (\r\n\t\texp[len - 1] === \"*\" ||\r\n\t\texp[len - 1] === \"/\" ||\r\n\t\texp[len - 1] === \"+\" ||\r\n\t\texp[len - 1] === \"-\"\r\n\t)\r\n\t\treturn false;\r\n\r\n\treturn true;\r\n};\r\n\r\nconst Divide = () => {\r\n\tconst expression = useExpression();\r\n\tconst setexpression = useExpressionUpdater();\r\n\r\n\tconst divideHandler = () => {\r\n\t\tif (addDivideValidation(expression)) setexpression((prev) => prev + \"/\");\r\n\t};\r\n\r\n\treturn <KeyBase value=\"/\" colored onClick={divideHandler} />;\r\n};\r\n\r\nexport default Divide;\r\n","import React from \"react\";\r\nimport { useExpressionUpdater } from \"../../../context/ExpressionContext\";\r\nimport { useResult, useResultUpdater } from \"../../../context/ResultContext\";\r\nimport KeyBase from \"../KeyBase\";\r\n\r\nconst Equals = () => {\r\n\tconst result = useResult();\r\n\tconst setResult = useResultUpdater();\r\n\tconst setExpression = useExpressionUpdater();\r\n\r\n\tconst equalsHandler = () => {\r\n\t\tif (result !== \"\" || result !== \"Infinity\") {\r\n\t\t\tsetExpression(result);\r\n\t\t\tsetResult(\"\");\r\n\t\t}\r\n\t};\r\n\treturn <KeyBase value=\"=\" colored onClick={equalsHandler} />;\r\n};\r\n\r\nexport default Equals;\r\n","import React from \"react\";\r\nimport {\r\n\tuseExpression,\r\n\tuseExpressionUpdater,\r\n} from \"../../../context/ExpressionContext\";\r\nimport KeyBase from \"../KeyBase\";\r\n\r\nconst addMultiplyValidation = (exp) => {\r\n\tconst len = exp.length;\r\n\r\n\tif (exp === \"\") return false;\r\n\tif (\r\n\t\texp[len - 1] === \"*\" ||\r\n\t\texp[len - 1] === \"/\" ||\r\n\t\texp[len - 1] === \"-\" ||\r\n\t\texp[len - 1] === \"+\"\r\n\t)\r\n\t\treturn false;\r\n\r\n\treturn true;\r\n};\r\n\r\nconst Multiply = () => {\r\n\tconst expression = useExpression();\r\n\tconst setExpression = useExpressionUpdater();\r\n\r\n\tconst multiplyHandler = () => {\r\n\t\tif (addMultiplyValidation(expression)) setExpression((prev) => prev + \"*\");\r\n\t};\r\n\r\n\treturn <KeyBase value=\"*\" colored onClick={multiplyHandler} />;\r\n};\r\n\r\nexport default Multiply;\r\n","import React from \"react\";\r\nimport {\r\n\tuseExpression,\r\n\tuseExpressionUpdater,\r\n} from \"../../../context/ExpressionContext\";\r\nimport KeyBase from \"../KeyBase\";\r\n\r\nfunction addPercentValidation(expression) {\r\n\tconst length = expression.length;\r\n\r\n\tif (expression === \"\") return false;\r\n\tif (\r\n\t\texpression[length - 1] === \"/\" ||\r\n\t\texpression[length - 1] === \"*\" ||\r\n\t\texpression[length - 1] === \"-\" ||\r\n\t\texpression[length] === \"+\"\r\n\t)\r\n\t\treturn false;\r\n\r\n\treturn true;\r\n}\r\n\r\nconst Percent = () => {\r\n\tconst expression = useExpression();\r\n\tconst setExpression = useExpressionUpdater();\r\n\r\n\tconst addPercentHandler = () => {\r\n\t\tif (addPercentValidation(expression)) {\r\n\t\t\tsetExpression((prev) => prev + \"%\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn <KeyBase value=\"%\" onClick={addPercentHandler} />;\r\n};\r\n\r\nexport default Percent;\r\n","import React from \"react\";\r\nimport {\r\n\tuseExpression,\r\n\tuseExpressionUpdater,\r\n} from \"../../../context/ExpressionContext\";\r\nimport KeyBase from \"../KeyBase\";\r\n\r\nconst addSubtractValidation = (exp) => {\r\n\tconst len = exp.length;\r\n\r\n\tif (exp[len - 1] === \"+\" || exp[len - 1] === \"-\") return false;\r\n\r\n\treturn true;\r\n};\r\n\r\nconst Subtract = () => {\r\n\tconst expression = useExpression();\r\n\tconst setExpression = useExpressionUpdater();\r\n\r\n\tconst subtractHandler = () => {\r\n\t\tif (addSubtractValidation(expression)) setExpression((prev) => prev + \"-\");\r\n\t};\r\n\r\n\treturn <KeyBase value=\"-\" colored onClick={subtractHandler} />;\r\n};\r\n\r\nexport default Subtract;\r\n","import React from \"react\";\r\nimport {\r\n\tuseExpression,\r\n\tuseExpressionUpdater,\r\n} from \"../../context/ExpressionContext\";\r\nimport KeyBase from \"./KeyBase\";\r\n\r\nconst dotValidationAndExpressionUpdate = (exp, setExp) => {\r\n\tconst len = exp.length;\r\n\tif (\r\n\t\texp[len - 1] === \"%\" ||\r\n\t\texp[len - 1] === \"/\" ||\r\n\t\texp[len - 1] === \"*\" ||\r\n\t\texp[len - 1] === \"-\" ||\r\n\t\texp[len - 1] === \"+\" ||\r\n\t\texp === \"\"\r\n\t)\r\n\t\tsetExp((prev) => prev + \"0.\");\r\n\telse setExp((prev) => prev + \".\");\r\n};\r\n\r\nconst NumberKey = ({ value }) => {\r\n\tconst expression = useExpression();\r\n\tconst setExpression = useExpressionUpdater();\r\n\r\n\tconst numberInputHandler = () => {\r\n\t\tif (value === \".\")\r\n\t\t\tdotValidationAndExpressionUpdate(expression, setExpression);\r\n\t\telse setExpression((prev) => prev + value);\r\n\t};\r\n\r\n\treturn <KeyBase value={value} colored={false} onClick={numberInputHandler} />;\r\n};\r\n\r\nexport default NumberKey;\r\n","import React from \"react\";\r\nimport Add from \"./functionKeys/Add\";\r\nimport Backspace from \"./functionKeys/Backspace\";\r\nimport Clear from \"./functionKeys/Clear\";\r\nimport Divide from \"./functionKeys/Divide\";\r\nimport Equals from \"./functionKeys/Equals\";\r\nimport Multiply from \"./functionKeys/Multiply\";\r\nimport Percent from \"./functionKeys/Percent\";\r\nimport Subtract from \"./functionKeys/Subtract\";\r\n\r\nimport \"./Keypad.css\";\r\nimport NumberKey from \"./NumberKey\";\r\nconst Keypad = () => {\r\n\treturn (\r\n\t\t<div className=\"keypad-container\">\r\n\t\t\t<Clear />\r\n\t\t\t<Percent />\r\n\t\t\t<Backspace />\r\n\t\t\t<Divide />\r\n\t\t\t<NumberKey value={\"7\"} />\r\n\t\t\t<NumberKey value={\"8\"} />\r\n\t\t\t<NumberKey value={\"9\"} />\r\n\t\t\t<Multiply />\r\n\t\t\t<NumberKey value={\"4\"} />\r\n\t\t\t<NumberKey value={\"5\"} />\r\n\t\t\t<NumberKey value={\"6\"} />\r\n\t\t\t<Subtract />\r\n\t\t\t<NumberKey value={\"1\"} />\r\n\t\t\t<NumberKey value={\"2\"} />\r\n\t\t\t<NumberKey value={\"3\"} />\r\n\t\t\t<Add />\r\n\t\t\t<NumberKey value={\"00\"} />\r\n\t\t\t<NumberKey value={\"0\"} />\r\n\t\t\t<NumberKey value={\".\"} />\r\n\t\t\t<Equals />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Keypad;\r\n","import React from \"react\";\r\nimport ExpressionProvider from \"../context/ExpressionContext\";\r\nimport ResultProvider from \"../context/ResultContext\";\r\n\r\nimport \"./Calculator.css\";\r\nimport Display from \"./Display\";\r\nimport Keypad from \"./KeypadComponents/Keypad\";\r\n\r\nfunction Calculator() {\r\n\treturn (\r\n\t\t<div className=\"calculator-container\">\r\n\t\t\t<ExpressionProvider>\r\n\t\t\t\t<ResultProvider>\r\n\t\t\t\t\t<Display />\r\n\t\t\t\t\t<Keypad />\r\n\t\t\t\t</ResultProvider>\r\n\t\t\t</ExpressionProvider>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Calculator;\r\n","import \"./App.css\";\nimport Calculator from \"./components/Calculator\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Calculator />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}